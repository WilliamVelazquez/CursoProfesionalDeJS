{"id":"ejercicios/this.html","dependencies":[{"name":"D:\\javie\\OneDrive - Instituto Politecnico Nacional\\Escuela de Javascript\\Curso-profesional-de-javascript\\package.json","includedInParent":true,"mtime":1569299088595}],"generated":{"html":"<html>\n  <head>\n    <title>this</title>\n  </head>\n\n  <body>\n    <a href=\"/ejercicios/\">Go back</a>\n    <p><em>Abre la consola</em></p>\n\n    <h1>\n      <code>this</code> se refiere a un objeto. Ese objeto es el que actualmente\n      está ejecutando un pedazo de código.\n    </h1>\n\n    <script>// this en el scope global\nconsole.log(`this: ${this}`); // this en el scope de una función\n\nfunction whoIsThis() {\n  return this;\n}\n\nconsole.log(whoIsThis()); // this en el scope de una función en strict mode\n\nfunction whoIsThisStrict() {\n  \"use strict\";\n\n  return this;\n}\n\nconsole.log(whoIsThisStrict()); // this en el contexto de un objeto\n\nconst person = {\n  nombre: 'Javier',\n  saludar: function () {\n    console.log(`Hola soy ${this.nombre}`);\n  }\n};\nperson.saludar(); // this cuando sacamos a una función de un objeto\n\nconst accion = person.saludar;\naccion(); //this en el contexto de una clase \n\nclass Person {\n  constructor(name) {\n    this.name = name;\n  }\n\n  saludar() {\n    console.log(`Hola soy ${this.name}`);\n  }\n\n}\n\nconst javier = new Person('Javier');\njavier.saludar();</script>\n  </body>\n</html>\n"},"sourceMaps":null,"error":null,"hash":"c40e761a01307e5e0eedb6f93ad042d0","cacheData":{"env":{}}}