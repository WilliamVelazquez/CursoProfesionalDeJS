{"version":3,"sources":["assets/MediaPlayer.ts","assets/plugins/AutoPlay.ts","assets/plugins/AutoPause.ts","assets/index.ts"],"names":[],"mappings":";;;;;;AAAA,AEEA,ADAA,IDFA,AEEA,ADAA,QAAA,CCAA,EFFA;AAAA,AEEA,ADAA;ADFA,AEEA,ADAA,YDFA,AEEA,ADAA;ADEE,AEEA,ADJF,WDEE,AEEA,ADJF,QAAA,CCIE,EFFA,ACFF,CDEc,AEEZ,ADID,MDNC,EAAkB;AAChB,AEEA,SFFK,AEEA,KFFL,GAAa,CEEb,GAAiB,EFFE,CAAC,CEEpB,CFFA,AECF,CAEE;AFFA,ACHF,EAAA,ODGO,CCHP,CAAA,KDGE,GAAe,CCHjB,CAAA,GAAA,CDGuB,CAAC,CCHxB,MDGiB,IAAkB,ACH/B,EDGF,ICHF,EAAsB;ADIpB,AGPJ,ADSK,ADLD,IEJJ,IFIQ,CDGC,AEEC,ADLD,MAAM,CAAC,CEJhB,GHOI,AGPJ,CFIS,CAAa,KCKjB,ADLD,EAAyB,CCKE,KCT/B,ADSoC,CCTpC,OAAA,CAAA,SDS+B,CAAwB,IAAxB,CCT/B,ADS4D,CCT5D,CAAA,EDS+B,CAA1B;AFDF,AEEE,ADLC,MAAA,GCKI,GDLE,CAAC,KAAP,CAAa,KAAb,GAAmB,ICKpB,ADLC,GCK6B,KAAK,sBAAL,CAA4B,IAA5B,CAAiC,IAAjC,CAA9B;ACTL,ADWG,ADNE,IELL,UAAA,GAAA,eAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,CAAA;AHSU,EAAA,WAAA,CAAA,SAAA,CAAA,WAAA,GAAR,YAAA;AACE,AGTJ,ADWE,ADLE,ECKF,ECXF,AFMI,MAAM,CCKR,ADLS,CCKT,GCXF,AFMI,GENJ,GDWE,CAAA,GAAA,GAAA,KCXF,CAAA,IDWM,GCXN,CAAA,EDWE,EAAU,iBCXZ,CAAA,CAAA;ADYI,ADLD,GAND,MCWO,MAAL,GAAc,MAAd;ACVJ,ADWI,ICXE,IDWI,CCXC,GAAG,IDWI,GAAG,CCXC,CAAC,EDWE,WCXX,CAAuB,OAAvB,CAAd,ADWqB,CAAyB,KAAK,kBAA9B,EAAkD;ACVvE,ADWM,ADNN,IELM,EDWA,GDNN,CELY,GAAG,EDWA,ECXI,ADWF,ADNjB,KCMsB,QCXH,CAAA,OAAJ,CAAgB;AAC7B,ADSqE,ADbvE,CAAA,CEIE,CFJF,CEII,CDSiB,CCTf,ADSF,KCV2B;AAE7B,ADWE,ECXF,EDWE,KCXK,EAAE,CAAC,ADWA,CAAC,GCXG,IDWZ,CAAiB,KCXL,ADWU,CCXV,KDWK,CAAY,CCXrB,EAAD,EAAiB,ADWxB,ICX4B,WAAA,CAAA,OAAJ,EAAjB;AAFoB,ADe3B,ADTJ,CENe,CAAf,EDeI,GDTJ,CAAA,ICSY,CAAC,EDTb,GAAe,QAAf,GCSI,CAA0B,kBAA1B,EAA8C,KAAK,sBAAnD;ACVJ,ADWG,GARD,CCHI,ADRN,CAqBE,KCbU,GAAgB,QAAQ,CAAC,cAAT,CAAwB,MAAxB,CAA5B;;AACA,MAAM,CAAC,OAAP,GAAiB,YAAA;AAAM,ADab,EAAA,OCba,EDab,CAAA,GCbmB,CAAC,KDapB,CAAA,ICba,EAAA,YDab,GAAR,UAA2B,OAA3B,EAA8D;ACbtB,ADctC,CCdJ,ODcU,KAAK,GAAG,OAAO,CAAC,CAAD,CAArB;AAEA,QAAM,SAAS,GAAG,KAAK,CAAC,iBAAN,IAA2B,KAAK,SAAlD;AFjBF,AGEF,IAAM,IHFJ,GGEW,EHFX,CGE0B,EHF1B,IAAA,EGEkC,CAAC,cAAT,CAAwB,MAAxB,CAA5B;ADgBI,QAAI,SAAJ,EAAe;AFDf,AGdJ,ADgBM,OChBC,CAAC,CHcC,EEEE,IChBX,CHcI,CAAa,AEEX,CChBY,ADgBA,IAAZ,EFFF,CAAqB,KGdP,KHcO,MAAA,EAAM;AACzB,AGfkB,ADiBnB,KAFD,CFAE,GGfkB,EDiBb,CFFC,CAAC,EGfiB,CHexB,AGfyB,CHed,KAAX,IGfkB,EAAA;AHgBnB,AGhBsC,ADkBrC,CClBN,IHcI,MEIO,MAAL,CAAY,KAAZ;AFDH,AEEE,GFtBK;AGMV,ADiBG,GATO,CCRN,mBAAmB,SAAvB,EAAkC;AHehC,AGdE,EHcF,AGdE,SAAS,CAAC,CHcZ,CAAA,SAAA,CAAA,CGdE,CAAwB,EHc1B,GAAA,GGdE,CAAiC,QHcnC,8BGdE,EAA2C,KAA3C,CAAiD,UAAA,KAAA,EAAK;AHetD,AGdI,ADiBE,EAAA,ECjBF,KHcC,EGdM,ADiBL,CCjBM,ADiBN,EFHN,CAAW,AGdP,CAAY,GHchB,EGdqB,ADiBf,CCjBgB,ADiBhB,OCjBF,eDiBE,GAAR,YAAA;AFFC,AGdE,ADiBD,GFLF,AGdE,KDmBM,SAAS,GAAG,QAAQ,CAAC,eAAT,KAA6B,SAA/C;AChBH;AHeC,AEEE,EFFF,MEEM,KFFN,CAAA,GEEE,EAAe,IFFjB,CAAA,KAAA,GAAA,YAAA;AACE,AEEE,SFFG,EEEE,GFFP,CAAW,EEET,CAAY,EFFd,EEEE;AFDH,AEEE,GFJH,EEEE,MAEO;AACL,WAAK,MAAL,CAAY,KAAZ;AFDJ,AEEG,EFFH,WAAA,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACE,AEED,GAPO,KFKF,KAAK,KAAL,CAAW,MAAf,EAAuB;AACrB,WAAK,KAAL,CAAW,IAAX;AACD,AEAF,KFFC,MAEO;AACL,AEAN,SAAA,EFAW,KAAL,CAAW,CEAjB,IFAM;AACD,AE1CL,CAAA,EAAA;AF2CG,GAND;AEKF,OAAA,CAAA,OAAA,GAAe,SAAf;AFEE,AEAF,EFAE,WAAA,CAAA,SAAA,CAAA,IAAA,GAAA,YAAA;AACE,SAAK,KAAL,CAAW,KAAX,GAAmB,IAAnB;AACD,GAFD;;AAGA,EAAA,WAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACE,SAAK,KAAL,CAAW,KAAX,GAAmB,KAAnB;AACD,GAFD;;AAIA,EAAA,WAAA,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACE;;;;;AAMA,SAAK,KAAL,CAAW,KAAX,GAAmB,KAAK,MAAL,EAAnB,GAAmC,KAAK,IAAL,EAAnC;AACD,GARD;;AASF,SAAA,WAAA;AA9DA,CAAA,EAAA;AA+DA;;;;;;;;;;;;;;;;;;;;;AAoBA,OAAA,CAAA,OAAA,GAAe,WAAf","file":"assets.71ddc51b.js","sourceRoot":"..","sourcesContent":["class MediaPlayer {\r\n  media:HTMLMediaElement;\r\n  plugins:Array<any>;\r\n\r\n  constructor(config) {\r\n    this.media = config.el;\r\n    this.plugins = config.plugins || [];\r\n    this.initPlugins();\r\n  }\r\n\r\n  private initPlugins() {\r\n    /*   \r\n    const player = {\r\n\r\n      //Con Typescript ya no es ncesario porqueya existe private\r\n    play: () => this.play(),\r\n      pause: () => this.pause(),\r\n      media: this.media,\r\n      get muted() {\r\n        return this.media.muted;\r\n      },\r\n\r\n      set muted(value) {\r\n        this.media.muted = value;\r\n      }\r\n    }; */\r\n\r\n    this.plugins.forEach(plugin => {\r\n      plugin.run(this);\r\n    });\r\n  }\r\n  play() {\r\n    this.media.play();\r\n  }\r\n\r\n  pause() {\r\n    this.media.pause();\r\n  }\r\n\r\n  togglePlay() {\r\n    if (this.media.paused) {\r\n      this.media.play();\r\n    } else {\r\n      this.media.pause();\r\n    }\r\n  }\r\n  mute() {\r\n    this.media.muted = true;\r\n  }\r\n  unmute() {\r\n    this.media.muted = false;\r\n  }\r\n\r\n  toggleMute() {\r\n    /*    if (this.media.muted === true) {\r\n      this.unmute();\r\n    } else {\r\n      this.mute();\r\n    } */\r\n\r\n    this.media.muted ? this.unmute() : this.mute();\r\n  }\r\n}\r\n/*  function MediaPlayer(config) {\r\n        this.media = config.el;\r\n      }\r\n\r\n      MediaPlayer.prototype.play = function() {\r\n        this.media.play();\r\n      };\r\n\r\n      MediaPlayer.prototype.pause = function() {\r\n        this.media.pause();\r\n      };\r\n\r\n      MediaPlayer.prototype.togglePlay = function() {\r\n        if (this.media.paused) {\r\n          this.play();\r\n        } else {\r\n          this.pause();\r\n        }\r\n      }; */\r\n\r\nexport default MediaPlayer;\r\n","import MediaPlayer from \"../MediaPlayer\";\r\n\r\nclass AutoPlay {\r\n  run(player:MediaPlayer) {\r\n    if (!player.media.muted) {\r\n      player.media.muted=true;\r\n    }\r\n\r\n    player.play();\r\n  }\r\n}\r\nexport default AutoPlay;\r\n","\r\nimport MediaPlayer from \"../MediaPlayer\";\r\nclass AutoPause {\r\n  private threshold:number;\r\n  player: MediaPlayer;\r\n\r\n  constructor() {\r\n    this.threshold = 0.25;\r\n    //Vamos a establecer el this permanentemente a la instancia del proyecto o con un arrow function  se puede omitir\r\n     this.handleIntersection = this.handleIntersection.bind(this);\r\n     this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\r\n\r\n  }\r\n  run(player) {\r\n    this.player = player;\r\n    const observer = new IntersectionObserver(this.handleIntersection, {\r\n      threshold: this.threshold\r\n    });\r\n    observer.observe(this.player.media);\r\n\r\n    document.addEventListener(\"visibilitychange\", this.handleVisibilityChange);\r\n  }\r\n\r\n  //Con el arrow function le pasamos automaticamente el scope de la misma funcon\r\n  private handleIntersection(entries:IntersectionObserverEntry[]) {\r\n    const entry = entries[0];\r\n\r\n    const isVisible = entry.intersectionRatio >= this.threshold;\r\n    if (isVisible) {\r\n      this.player.play();\r\n    } else {\r\n      this.player.pause();\r\n    }\r\n  }\r\n\r\n  private handleVisibilityChange (){\r\n    const isVisible = document.visibilityState === \"visible\";\r\n    if (isVisible) {\r\n      this.player.play();\r\n    } else {\r\n      this.player.pause();\r\n    }\r\n  };\r\n}\r\nexport default AutoPause;\r\n\r\n/* class AutoPause {\r\n  constructor() {\r\n    this.threshold = 0.25;\r\n    //Vamos a establecer el this permanentemente a la instancia del proeycto\r\n    //this.handleIntersection = this.handleIntersection.bind(this);\r\n  }\r\n  run(player) {\r\n    this.player = player;\r\n    const observer = new IntersectionObserver(this.handleIntersection, {\r\n      threshold: this.threshold\r\n    });\r\n    observer.observe(this.player.media);\r\n  }\r\n\r\n\r\n    handleIntersection = entries => {\r\n    const entry = entries[0];\r\n\r\n    const isVisible = entry.intersectionRatio >= this.threshold;\r\n    if (isVisible) {\r\n      this.player.play();\r\n    } else {\r\n      this.player.pause();\r\n    }\r\n  };\r\n\r\n  handleVisibilityChange = () => {\r\n    const isVisible = document.visibilityState === \"visible\";\r\n    if (isVisible) {\r\n      this.player.play();\r\n    } else {\r\n      this.player.pause();\r\n    }\r\n  };\r\n}\r\nexport default AutoPause;\r\n */\r\n","import MediaPlayer from \"./MediaPlayer\";\r\nimport AutoPlay from \"./plugins/AutoPlay\";\r\nimport AutoPause from \"./plugins/AutoPause\";\r\n\r\nconst video = document.querySelector(\"video\");\r\nconst player = new MediaPlayer({\r\n  el: video,\r\n  plugins: [new AutoPlay(), new AutoPause()]\r\n});\r\n\r\nconst button :HTMLElement = document.getElementById(\"play\");\r\nbutton.onclick = () => player.togglePlay();\r\nconst button2 :HTMLElement= document.getElementById(\"mute\");\r\nbutton2.onclick = () => player.toggleMute();\r\n\r\n\r\nif ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.register('/sw.js').catch(error=>{\r\n        console.log(error.message)\r\n    });\r\n}   "]}