{"version":3,"sources":["ejercicios/observer/index.ts"],"names":[],"mappings":"AAUA,IAAA,YAAA;AAAA;AAAA,YAAA;AAGI,WAAA,YAAA,GAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AADA,SAAA,SAAA,GAAqB,EAArB;AAEI,QAAM,EAAE,GAAmB,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAA3B;AACA,IAAA,EAAE,CAAC,gBAAH,CAAoB,OAApB,EAA4B,YAAA;AACxB,MAAA,KAAI,CAAC,MAAL,CAAY,EAAE,CAAC,KAAf;AACH,KAFD;AAGH;;AAED,EAAA,YAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAW,QAAX,EAA4B;AACxB,SAAK,SAAL,CAAe,IAAf,CAAoB,QAApB;AACH,GAFD;;AAGA,EAAA,YAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAa,QAAb,EAA8B;AAC1B,QAAM,KAAK,GAAE,KAAK,SAAL,CAAe,SAAf,CAAyB,UAAA,GAAA,EAAG;AACrC,aAAO,GAAG,KAAG,QAAb;AACH,KAFY,CAAb;AAGA,SAAK,SAAL,CAAe,MAAf,CAAsB,KAAtB,EAA4B,CAA5B;AACH,GALD;;AAMA,EAAA,YAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,IAAP,EAAe;AAEX,SAAK,SAAL,CAAe,OAAf,CAAuB,UAAA,QAAA,EAAQ;AAAG,aAAA,QAAQ,CAAC,MAAT,CAAgB,IAAhB,CAAA;AAAqB,KAAvD;AAGH,GALD;;AAMJ,SAAA,YAAA;AAzBA,CAAA,EAAA;;AA2BA,IAAA,YAAA;AAAA;AAAA,YAAA;AAEI,WAAA,YAAA,GAAA;AACI,SAAK,EAAL,GAAU,QAAQ,CAAC,aAAT,CAAuB,SAAvB,CAAV;AACH;;AACD,EAAA,YAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,IAAP,EAAe;AACX,SAAK,EAAL,CAAQ,SAAR,GAAmB,IAAnB;AACH,GAFD;;AAGJ,SAAA,YAAA;AARA,CAAA,EAAA;;AAWC,IAAM,KAAK,GAAG,IAAI,YAAJ,EAAd;AACA,IAAM,OAAO,GAAG,IAAI,YAAJ,EAAhB;AAEA,KAAK,CAAC,SAAN,CAAgB,OAAhB;AACD,UAAU,CAAC,YAAA;AACP,EAAA,KAAK,CAAC,WAAN,CAAkB,OAAlB;AACH,CAFS,EAEP,IAFO,CAAV","file":"observer.34a0b697.js","sourceRoot":"..","sourcesContent":["interface Observer{\r\n    update:(dat:any)=> void;\r\n\r\n}\r\n\r\ninterface Subject {\r\n    subscribe:(observer :Observer)=>void;\r\n    unsubscribe:(observer :Observer)=>void;\r\n}\r\n\r\nclass BitCoinPrice implements Subject{\r\n\r\n    observers:Observer[]=[];\r\n    constructor(){\r\n        const el:HTMLInputElement =document.querySelector('#value');\r\n        el.addEventListener('input',()=>{\r\n            this.notify(el.value)\r\n        })\r\n    }\r\n\r\n    subscribe (observer:Observer) {\r\n        this.observers.push(observer)\r\n    }\r\n    unsubscribe (observer:Observer) {\r\n        const index= this.observers.findIndex(obs=>{\r\n            return obs===observer\r\n        })\r\n        this.observers.splice(index,1)\r\n    }\r\n    notify(data:any){\r\n\r\n        this.observers.forEach(observer=> observer.update(data))\r\n\r\n\r\n    }\r\n}\r\n\r\nclass PriceDisplay implements Observer {\r\n    private el :HTMLElement;\r\n    constructor() {\r\n        this.el = document.querySelector('#precio')\r\n    }\r\n    update(data:any){\r\n        this.el.innerText =data\r\n    }\r\n}\r\n\r\n\r\n const value = new BitCoinPrice();\r\n const display = new PriceDisplay();\r\n\r\n value.subscribe(display)\r\nsetTimeout(() => {\r\n    value.unsubscribe(display)\r\n}, 5000);\r\n"]}