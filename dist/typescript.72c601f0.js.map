{"version":3,"sources":["ejercicios/typescript/index.ts"],"names":[],"mappings":"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","file":"typescript.72c601f0.js","sourceRoot":"..","sourcesContent":["console.log(\"Hello Typescript\");\r\nfunction add(a:number,b:number) {\r\n    return a + b;\r\n    \r\n}\r\nconsole.log((add(2,3)));\r\n\r\nlet muted:boolean=true;\r\nmuted=false;\r\n\r\nlet numerador:number = 42;\r\nlet denominador:number=6;\r\nlet resultado=numerador/denominador;\r\n\r\n\r\nlet nombre :string ='Me llamo Javier';\r\n\r\nlet saludo= `Me llamo ${nombre}`\r\n\r\n// arreglos\r\nlet people:string[] =[];\r\npeople=['Isabel','Nicole','Raul'];\r\npeople.push('9000')\r\n//Arreglos diciendo de que tipo pueden ser \r\nlet peopleandnumbers :Array  <string | number>=[]\r\n\r\n//Enum\r\n\r\nenum Color{\r\n    Rojo='Rojo',\r\n    Verde='Verde',\r\n    Azul='Azul'\r\n}\r\n\r\nlet colorfavorito:Color =Color.Rojo; \r\n\r\nconsole.log(`Mi color favorito es ${colorfavorito} `)\r\n\r\n//Comodin \r\n\r\nlet comodin :any= 'Joker'\r\ncomodin={type:'wildcard'}\r\n\r\n//object\r\nlet someObject :object ={ type:'wildcaard'}\r\n\r\n//funciones\r\n\r\nfunction add2(a:number,b:number) {\r\n    return a+b ;\r\n}\r\n\r\nconst sum = add2(2,5) \r\n\r\nfunction createAdder(a:number):(number)=>number {\r\n    return function (b:number) {\r\n        return b +a ;\r\n    }\r\n}\r\n\r\nfunction fullname(firstname:string,lastName:string):string {\r\n    return `${firstname} ${lastName}`\r\n    \r\n}\r\n\r\nconst javi1 =fullname(\"Javier\", \"Fuentes\")\r\n\r\n//parametro opcional\r\nfunction fullname2(firstname:string,lastName?:string):string {\r\n    return `${firstname} ${lastName}`\r\n    \r\n}\r\n\r\nconst javi =fullname2(\"Javier\")\r\n\r\n//parametro definido\r\nfunction fullname3(firstname:string,lastName:string='Fuentes'):string {\r\n    return `${firstname} ${lastName}`\r\n    \r\n}\r\n\r\nconst jsvi2 =fullname3(\"Javier\")\r\n\r\n\r\ninterface Rectangulo{\r\n    ancho:number,\r\n    alto:number,\r\n    color?:Color\r\n\r\n}\r\n\r\nlet rect:Rectangulo={\r\n    ancho:4,\r\n    alto:6,\r\n    color:Color.Rojo\r\n\r\n}\r\n\r\nfunction area(r:Rectangulo):number {\r\n    return r.alto * r.ancho;\r\n}\r\n\r\nconst areaRect =area(rect)\r\nconsole.log(areaRect)\r\n\r\nrect.toString = function () {\r\n    return this.color ? `Un rectangulo ${this.color} ` : `Un rectangulo`;\r\n}\r\nconsole.log(rect.toString())"]}