{"version":3,"sources":["ejercicios/decorator/index.ts"],"names":[],"mappings":"AAAA,IAAA,KAAA;AAAA;AAAA,YAAA;AAIE,WAAA,KAAA,CAAY,KAAZ,EAAmC;AAAnC,QAAA,KAAA,GAAA,IAAA;;AACE,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,MAAL,GAAc,EAAd;AAEA,QAAI,YAAY,GAAG,QAAQ,CAAC,aAAT,CAAuB,GAAvB,CAAnB;AACA,IAAA,YAAY,CAAC,SAAb,GAAyB,aAAzB;AACA,SAAK,KAAL,CAAW,UAAX,CAAsB,YAAtB,CAAmC,YAAnC,EAAiD,KAAK,KAAL,CAAW,WAA5D;AAEA,SAAK,KAAL,CAAW,gBAAX,CAA4B,OAA5B,EAAqC,YAAA;AACnC,MAAA,KAAI,CAAC,MAAL,GAAc,EAAd;;AACA,MAAA,KAAI,CAAC,QAAL;;AACA,MAAA,YAAY,CAAC,SAAb,GAAyB,KAAI,CAAC,MAAL,CAAY,CAAZ,KAAkB,EAA3C;AACD,KAJD;AAKD;;AAED,EAAA,KAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA,CAAa,CAAb;;AACF,SAAA,KAAA;AApBA,CAAA,EAAA;;AAsBA,SAAS,sBAAT,CAAgC,KAAhC,EAA4C;AAE5C,MAAI,QAAQ,GAAE,KAAK,CAAC,QAApB;;AACA,EAAA,KAAK,CAAC,QAAN,GAAe,YAAA;AACb,IAAA,QAAQ;AACR,QAAI,KAAK,GAAE,KAAK,CAAC,KAAN,CAAY,KAAvB;;AACA,QAAI,CAAC,KAAL,EAAY;AACV,MAAA,KAAK,CAAC,MAAN,CAAa,IAAb,CAAkB,WAAlB;AACD;AACF,GAND;;AAUE,SAAO,KAAP;AACD;;AAGD,SAAS,mBAAT,CAA6B,KAA7B,EAAyC;AAEvC,MAAI,QAAQ,GAAE,KAAK,CAAC,QAApB;;AACA,EAAA,KAAK,CAAC,QAAN,GAAe,YAAA;AACb,IAAA,QAAQ;AACR,QAAI,KAAK,GAAE,KAAK,CAAC,KAAN,CAAY,KAAvB;;AACA,QAAI,KAAK,CAAC,OAAN,CAAc,GAAd,MAAqB,CAAC,CAA1B,EAA6B;AAC3B,MAAA,KAAK,CAAC,MAAN,CAAa,IAAb,CAAkB,oBAAlB;AACD;AACF,GAND;;AAUE,SAAO,KAAP;AACD;;AAIH,IAAI,KAAK,GAAG,IAAI,KAAJ,CAAU,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAV,CAAZ;AACA,mBAAmB,CAAC,sBAAsB,CAAC,KAAD,CAAvB,CAAnB","file":"decorator.df4bca80.js","sourceRoot":"..","sourcesContent":["class Field {\n  errors: string[];\n  input: HTMLInputElement;\n\n  constructor(input: HTMLInputElement) {\n    this.input = input;\n    this.errors = [];\n\n    let errorMessage = document.createElement('p');\n    errorMessage.className = 'text-danger';\n    this.input.parentNode.insertBefore(errorMessage, this.input.nextSibling);\n\n    this.input.addEventListener('input', () => {\n      this.errors = [];\n      this.validate();\n      errorMessage.innerText = this.errors[0] || '';\n    });\n  }\n\n  validate() {}\n}\n\nfunction RequiredFieldDecorator(field: Field): Field {\n\nlet validate =field.validate;\nfield.validate=function () {\n  validate()\n  let value= field.input.value\n  if (!value) {\n    field.errors.push(\"Requerido\")\n  }\n}\n\n\n\n  return field;\n}\n\n\nfunction EmailFieldDecorator(field: Field): Field {\n\n  let validate =field.validate;\n  field.validate=function () {\n    validate()\n    let value= field.input.value\n    if (value.indexOf(\"@\")===-1) {\n      field.errors.push(\"Debe ser un email \")\n    }\n  }\n  \n  \n  \n    return field;\n  }\n  \n\n\nlet field = new Field(document.querySelector('#email'));\nEmailFieldDecorator(RequiredFieldDecorator(field));\n"]}