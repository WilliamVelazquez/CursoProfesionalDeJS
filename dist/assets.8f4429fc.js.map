{"version":3,"sources":["assets/MediaPlayer.js","assets/plugins/AutoPlay.js","assets/plugins/AutoPause.js","assets/index.js"],"names":["MediaPlayer","constructor","config","media","el","plugins","_initPlugins","player","play","pause","muted","value","forEach","plugin","run","togglePlay","paused","mute","unmute","toggleMute","AutoPlay","AutoPause","threshold","handleIntersection","bind","handleVisibilityChange","observer","IntersectionObserver","observe","document","addEventListener","entries","entry","isVisible","intersectionRatio","visibilityState","video","querySelector","button","getElementById","onclick","button2","navigator","serviceWorker","register","catch","error","console","log","message"],"mappings":";;AGAA;;AACA;;AACA;AHFA,AEAA,ADAA,MDAMA,AEAAqB,ADAAD,QAAN,CCAA,ADAe,CCAC,CFAhB,CAAkB;AAChBnB,AEAAA,ADAAa,EDAAb,AEAAA,ADAAa,GAAG,CAACP,MAAD,CDAQ,AEAA,CFACL,ACAA,ECAE,IFAH,EAAS;AAClB,AEAA,ADAA,QAAI,CDACC,AEAAmB,ADAAf,KDAL,CCAW,CAACG,CDACR,CEAb,GAAiB,ADAjB,EDAmB,ACAA,CDACE,CEApB,CFAA,AEDY,CAEZ;AFAA,AGCJ,AFDMG,MECA6B,AFDA7B,GDAGF,EGCE,CFDC,CAACK,CECCmB,EHDV,ECAE,CDAa3B,ECAA,CECG,CAACmC,EHDE,ACAnB,CDAoBhC,OAAP,GGCL,CHDuB,AGCA,EHDjC,KGCU,CAAd;AACA,ADDK,ADAA,MECCE,GDDIgB,GCCE,GAAG,IAAIvB,QDDd,GAA0B,KAAKuB,ICCrB,CAAgB,aDDA,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AFAD,AGEFpB,ADDG,ECCHA,EAAE,EAAEgC,GHFG9B,AECCmB,ECAqB,UHD3B,UECC,GAA8B,KAAKA,sBAAL,CAA4BD,IAA5B,CAAiC,IAAjC,CAA9B;AFAF,AGEDnB,ADAC,ADDCE,EECFF,EFDEE,KECK,CFDC,CECC,AFDAC,CECC,GFDR,CECYY,iBAAJ,EAAD,EAAiB,IAAIC,kBAAJ,EAAjB;AAFoB,AFE5B,CEFY,CAAf;AHEEf,AGGF,ADFEQ,EFDAR,AECAQ,GAAG,CCECwB,ADFA/B,MCEM,ADFP,EFDS,AECA,CCECsB,EHHE,MGGM,CAACU,cAAT,CAAwB,MAAxB,CAAf;AHFI,AECA,ADTW,SCSNhC,CFDCA,KECN,CFDY,EECEA,CFDC,KECf;AFAEC,AGEN8B,ADDI,MFDE9B,AGEA,CAACgC,GHFG,AECAd,EFDE,EGEZ,GAAiB,CHFC,AECA,GAAG,EFDElB,AGEAD,EDDEoB,EFDP,EADC,AGGU,CAACZ,UAAP,EAAvB,GDDqB,CAAyB,KAAKQ,kBAA9B,EAAkD;AFAjEd,AECAa,MFDAb,AECAa,KFDK,EAAE,EECE,ADFAF,ECEE,EFDE,GECGE,EFDEb,KAAL,EAFA;AAGbN,AGCN,ADFuE,KAAlD,CFCfA,AGCAsC,ADFF,KFCO,EAAE,AGCA,GAAGZ,EHDE1B,KAHC,CGIK,CAACoC,cAAT,CAAwB,MAAxB,CAAhB;ADCIb,IAAAA,QAAQ,CAACE,OAAT,CAAiB,KAAKrB,MAAL,CAAYJ,KAA7B;AFDE,AGCNsC,ADEIZ,IAAAA,GCFG,CAACW,EHDE9B,EEGE,CAACoB,EFHP,AGCN,GHDkB,AGCA,MAAMvB,KDEpB,CCF0B,ADEA,CCFCY,UAAP,EAAxB,KDEI,EAA8C,KAAKM,sBAAnD;AFFI,AEGL,GAhBa,CAkBd,WFLa,KAAKtB,KAAL,CAAWO,KAAlB;AACD,AGEP,IAAI,GHRe,gBGQIgC,SAAvB,EAAkC;AAC9BA,EAAAA,SAAS,CAACC,aAAV,CAAwBC,QAAxB,CAAiC,sCAAjC,EAA2CC,KAA3C,CAAiDC,KAAK,IAAE;AHDtD,AGEEC,ADCNxB,EAAAA,ECDMwB,MHFErC,CGEK,CAACsC,GHFV,AGEE,CHFQrC,AGEImC,IDCA,CFHd,AGEmB,ADCJf,CCDKkB,CHFH,KEGH,CCDZ,CDCsB;AFFtB,AGEH,ADCD,GCHA,ODGMjB,GFHG7B,EEGE,GFHP,AEGU4B,CFHCrB,KAAX,CEGiB,CAAC,CFHCC,AEGF,CAArB,IFHI;AACD,AGEN,ADEG,UAAMsB,SAAS,GAAGD,KAAK,CAACE,iBAAN,IAA2B,KAAKZ,SAAlD;;AFde,AEef,KFfA,GEeIW,SAAJ,EAAe;AFFf,AEGE,SFHG5B,EEGEE,KFHP,CAAaK,AEGX,CAAYJ,IAAZ,EFHF,CAAqBK,MAAM,IAAI;AAC7BA,AEGD,KAFD,CFDEA,KEGK,CFHC,CAACC,GAAP,CAAWP,MAAX;AACD,AEGC,KFLF,MEKOA,MAAL,CAAYE,KAAZ;AFFH,AEGE;AACF;AFHDD,EAAAA,IAAI,GAAG;AACL,AEIFiB,EAAAA,OFJOtB,KAAL,CAAWK,IAAX,KEIoB,GAAG;AFHxB,AEIC,UAAMyB,SAAS,GAAGJ,QAAQ,CAACM,eAAT,KAA6B,SAA/C;;AFFF1B,AEGE,EFHFA,KAAK,CEGCwB,EFHE,OEGN,EAAe;AFFf,AEGE,SFHG9B,EEGEI,GFHP,CAAWE,EEGT,CAAYD,EFHd,EEGE;AFFH,AEGE,KAFD,MAEO;AACL,WAAKD,MAAL,CAAYE,KAAZ;AFFJM,AEGG,EFHHA,UAAU,GAAG;AACX,AEGD,QFHK,KAAKZ,KAAL,CAAWa,MAAf,EAAuB;AACrB,WAAKb,KAAL,CAAWK,IAAX;AACD,AEpCW,KFkCZ,MAEO;AACL,WAAKL,KAAL,CAAWM,KAAX;AACD,eECUY;AFAZ,AEEH;;AFDEJ,EAAAA,IAAI,GAAG;AACL,SAAKd,KAAL,CAAWO,KAAX,GAAmB,IAAnB;AACD;;AACDQ,EAAAA,MAAM,GAAG;AACP,SAAKf,KAAL,CAAWO,KAAX,GAAmB,KAAnB;AACD;;AAEDS,EAAAA,UAAU,GAAG;AACX;;;;;AAMA,SAAKhB,KAAL,CAAWO,KAAX,GAAmB,KAAKQ,MAAL,EAAnB,GAAmC,KAAKD,IAAL,EAAnC;AACD;;AAvDe;AAyDlB;;;;;;;;;;;;;;;;;;;;;eAoBejB","file":"assets.8f4429fc.js","sourceRoot":"..","sourcesContent":["class MediaPlayer {\r\n  constructor(config) {\r\n    this.media = config.el;\r\n    this.plugins = config.plugins || [];\r\n    this._initPlugins();\r\n  }\r\n\r\n  _initPlugins() {\r\n    const player = {\r\n      play: () => this.play(),\r\n      pause: () => this.pause(),\r\n      media: this.media,\r\n      get muted() {\r\n        return this.media.muted;\r\n      },\r\n\r\n      set muted(value) {\r\n        this.media.muted = value;\r\n      }\r\n    };\r\n\r\n    this.plugins.forEach(plugin => {\r\n      plugin.run(player);\r\n    });\r\n  }\r\n  play() {\r\n    this.media.play();\r\n  }\r\n\r\n  pause() {\r\n    this.media.pause();\r\n  }\r\n\r\n  togglePlay() {\r\n    if (this.media.paused) {\r\n      this.media.play();\r\n    } else {\r\n      this.media.pause();\r\n    }\r\n  }\r\n  mute() {\r\n    this.media.muted = true;\r\n  }\r\n  unmute() {\r\n    this.media.muted = false;\r\n  }\r\n\r\n  toggleMute() {\r\n    /*    if (this.media.muted === true) {\r\n      this.unmute();\r\n    } else {\r\n      this.mute();\r\n    } */\r\n\r\n    this.media.muted ? this.unmute() : this.mute();\r\n  }\r\n}\r\n/*  function MediaPlayer(config) {\r\n        this.media = config.el;\r\n      }\r\n\r\n      MediaPlayer.prototype.play = function() {\r\n        this.media.play();\r\n      };\r\n\r\n      MediaPlayer.prototype.pause = function() {\r\n        this.media.pause();\r\n      };\r\n\r\n      MediaPlayer.prototype.togglePlay = function() {\r\n        if (this.media.paused) {\r\n          this.play();\r\n        } else {\r\n          this.pause();\r\n        }\r\n      }; */\r\n\r\nexport default MediaPlayer;\r\n","class AutoPlay {\r\n  run(player) {\r\n    if (!player.muted) {\r\n      player.muted=true;\r\n    }\r\n\r\n    player.play();\r\n  }\r\n}\r\nexport default AutoPlay;\r\n","class AutoPause {\r\n  constructor() {\r\n    this.threshold = 0.25;\r\n    //Vamos a establecer el this permanentemente a la instancia del proyecto o con un arrow function  se puede omitir\r\n     this.handleIntersection = this.handleIntersection.bind(this);\r\n     this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\r\n\r\n  }\r\n  run(player) {\r\n    this.player = player;\r\n    const observer = new IntersectionObserver(this.handleIntersection, {\r\n      threshold: this.threshold\r\n    });\r\n    observer.observe(this.player.media);\r\n\r\n    document.addEventListener(\"visibilitychange\", this.handleVisibilityChange);\r\n  }\r\n\r\n  //Con el arrow function le pasamos automaticamente el scope de la misma funcon\r\n  handleIntersection(entries) {\r\n    const entry = entries[0];\r\n\r\n    const isVisible = entry.intersectionRatio >= this.threshold;\r\n    if (isVisible) {\r\n      this.player.play();\r\n    } else {\r\n      this.player.pause();\r\n    }\r\n  }\r\n\r\n  handleVisibilityChange (){\r\n    const isVisible = document.visibilityState === \"visible\";\r\n    if (isVisible) {\r\n      this.player.play();\r\n    } else {\r\n      this.player.pause();\r\n    }\r\n  };\r\n}\r\nexport default AutoPause;\r\n\r\n/* class AutoPause {\r\n  constructor() {\r\n    this.threshold = 0.25;\r\n    //Vamos a establecer el this permanentemente a la instancia del proeycto\r\n    this.handleIntersection = this.handleIntersection.bind(this);\r\n  }\r\n  run(player) {\r\n    this.player = player;\r\n    const observer = new IntersectionObserver(this.handleIntersection, {\r\n      threshold: this.threshold\r\n    });\r\n    observer.observe(this.player.media);\r\n  }\r\n\r\n\r\n    handleIntersection = entries => {\r\n    const entry = entries[0];\r\n\r\n    const isVisible = entry.intersectionRatio >= this.threshold;\r\n    if (isVisible) {\r\n      this.player.play();\r\n    } else {\r\n      this.player.pause();\r\n    }\r\n  };\r\n\r\n  handleVisibilityChange = () => {\r\n    const isVisible = document.visibilityState === \"visible\";\r\n    if (isVisible) {\r\n      this.player.play();\r\n    } else {\r\n      this.player.pause();\r\n    }\r\n  };\r\n}\r\nexport default AutoPause;\r\n */\r\n","import MediaPlayer from \"./MediaPlayer.js\";\r\nimport AutoPlay from \"./plugins/AutoPlay.js\";\r\nimport AutoPause from \"./plugins/AutoPause.js\";\r\n\r\nconst video = document.querySelector(\"video\");\r\nconst player = new MediaPlayer({\r\n  el: video,\r\n  plugins: [new AutoPlay(), new AutoPause()]\r\n});\r\n\r\nconst button = document.getElementById(\"play\");\r\nbutton.onclick = () => player.togglePlay();\r\nconst button2 = document.getElementById(\"mute\");\r\nbutton2.onclick = () => player.toggleMute();\r\n\r\n\r\nif ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.register('/sw.js').catch(error=>{\r\n        console.log(error.message)\r\n    });\r\n}   "]}